CREATE or replace VIEW cat AS select c.cat_id AS cat_id, c.parent_id AS parent_id, c.cat_name AS cat_name, c.color AS color, c.income AS income, c.keyword AS keyword, (case when (c.cat_id = c.parent_id) then ' ' else c1.cat_name end) AS parent_cat, (select count(1) from mov where (mov.cat_id = c.cat_id)) AS num_mov, (select (case when (count(1) > 2) then 'S' else 'N' end) from category cc where (c.cat_id = cc.parent_id)) AS have_ch from (category c join category c1) where (c.parent_id = c1.cat_id) order by c.parent_id , c.cat_id
CREATE OR REPLACE VIEW mov AS select m.mov_id AS mov_id, c.color AS color, (case when (c.cat_id = c.parent_id) then c.cat_name else concat(cp.cat_name, ' (', c.cat_name, ')') end) AS cat_name, c.cat_id AS cat_id, m.val AS val, m.dat_mov AS dat_mov, m.usr_mov AS usr_mov, m.note AS note, m.tms_upd AS tms_upd from ((movement m join category c) join category cp) where ((m.cat_id = c.cat_id) and (c.parent_id = cp.cat_id))
CREATE OR REPLACE VIEW tot_cat AS select sum(m.val) AS val, c.cat_name AS cat_name, c.color AS color, c.cat_id AS cat_id, c.income AS income, m.usr_mov AS usr_mov, year(m.dat_mov) AS year from (movement m join category c) where (m.cat_id = c.cat_id) group by c.cat_name , c.cat_id , c.income , m.usr_mov , year(m.dat_mov)
CREATE or replace VIEW tot_cat_date AS select sum(m.val) AS val, c.cat_name AS cat_name, c.cat_id AS cat_id, c.color AS color, c.income AS income, m.usr_mov AS usr_mov, month(m.dat_mov) AS month, year(m.dat_mov) AS year from (movement m join category c) where (m.cat_id = c.cat_id) group by c.cat_name , c.cat_id , c.color , c.income , m.usr_mov , month(m.dat_mov) , year(m.dat_mov) union select 0 AS '0', category.cat_name AS cat_name, category.cat_id AS cat_id, category.color AS color, category.income AS income, ' ' AS usr_mov, 1 AS '1', 0 AS '0' from category union select 0 AS '0', category.cat_name AS cat_name, category.cat_id AS cat_id, category.color AS color, category.income AS income, ' ' AS usr_mov, 2 AS '2', 0 AS '0' from category union select 0 AS '0', category.cat_name AS cat_name, category.cat_id AS cat_id, category.color AS color, category.income AS income, ' ' AS usr_mov, 3 AS '3', 0 AS '0' from category union select 0 AS '0', category.cat_name AS cat_name, category.cat_id AS cat_id, category.color AS color, category.income AS income, ' ' AS usr_mov, 4 AS '4', 0 AS '0' from category union select 0 AS '0', category.cat_name AS cat_name, category.cat_id AS cat_id, category.color AS color, category.income AS income, ' ' AS usr_mov, 5 AS '5', 0 AS '0' from category union select 0 AS '0', category.cat_name AS cat_name, category.cat_id AS cat_id, category.color AS color, category.income AS income, ' ' AS usr_mov, 6 AS '6', 0 AS '0' from category union select 0 AS '0', category.cat_name AS cat_name, category.cat_id AS cat_id, category.color AS color, category.income AS income, ' ' AS usr_mov, 7 AS '7', 0 AS '0' from category union select 0 AS '0', category.cat_name AS cat_name, category.cat_id AS cat_id, category.color AS color, category.income AS income, ' ' AS usr_mov, 8 AS '8', 0 AS '0' from category union select 0 AS '0', category.cat_name AS cat_name, category.cat_id AS cat_id, category.color AS color, category.income AS income, ' ' AS usr_mov, 9 AS '9', 0 AS '0' from category union select 0 AS '0', category.cat_name AS cat_name, category.cat_id AS cat_id, category.color AS color, category.income AS income, ' ' AS usr_mov, 10 AS '10', 0 AS '0' from category union select 0 AS '0', category.cat_name AS cat_name, category.cat_id AS cat_id, category.color AS color, category.income AS income, ' ' AS usr_mov, 11 AS '11', 0 AS '0' from category union select 0 AS '0', category.cat_name AS cat_name, category.cat_id AS cat_id, category.color AS color, category.income AS income, ' ' AS usr_mov, 12 AS '12', 0 AS '0' from category
CREATE or replace VIEW tot_eu AS select t.month AS month, t.year AS year, t.usr_mov AS usr_mov, t.cat_id AS cat_id, sum(t.income) AS income, (-(1) * sum(t.outcome)) AS outcome from tot_eu_month_tmp t group by t.month , t.year , t.usr_mov , t.cat_id union select '1' AS '1', 0 AS '0', ' ' AS usr_mov, 0 AS '0', 0 AS '0', 0 AS '0' union select '2' AS '2', 0 AS '0', ' ' AS usr_mov, 0 AS '0', 0 AS '0', 0 AS '0' union select '3' AS '3', 0 AS '0', ' ' AS usr_mov, 0 AS '0', 0 AS '0', 0 AS '0' union select '4' AS '4', 0 AS '0', ' ' AS usr_mov, 0 AS '0', 0 AS '0', 0 AS '0' union select '5' AS '5', 0 AS '0', ' ' AS usr_mov, 0 AS '0', 0 AS '0', 0 AS '0' union select '6' AS '6', 0 AS '0', ' ' AS usr_mov, 0 AS '0', 0 AS '0', 0 AS '0' union select '7' AS '7', 0 AS '0', ' ' AS usr_mov, 0 AS '0', 0 AS '0', 0 AS '0' union select '8' AS '8', 0 AS '0', ' ' AS usr_mov, 0 AS '0', 0 AS '0', 0 AS '0' union select '9' AS '9', 0 AS '0', ' ' AS usr_mov, 0 AS '0', 0 AS '0', 0 AS '0' union select '10' AS '10', 0 AS '0', ' ' AS usr_mov, 0 AS '0', 0 AS '0', 0 AS '0' union select '11' AS '11', 0 AS '0', ' ' AS usr_mov, 0 AS '0', 0 AS '0', 0 AS '0' union select '12' AS '12', 0 AS '0', ' ' AS usr_mov, 0 AS '0', 0 AS '0', 0 AS '0'
CREATE or replace VIEW tot_eu_month AS select sum(m.val) AS val, m.type AS income, m.usr_mov AS usr_mov, m.cat_id AS cat_id, month(m.dat_mov) AS month, year(m.dat_mov) AS year from movement m group by m.type , m.usr_mov , m.cat_id , month(m.dat_mov) , year(m.dat_mov)
CREATE or replace VIEW tot_eu_month_tmp AS select tot_eu_month.month AS month, tot_eu_month.year AS year, tot_eu_month.usr_mov AS usr_mov, tot_eu_month.cat_id AS cat_id, (case when (tot_eu_month.income = 'P') then tot_eu_month.val else 0 end) AS income, (case when (tot_eu_month.income = 'N') then tot_eu_month.val else 0 end) AS outcome from tot_eu_month
CREATE or replace VIEW tot_usr AS select abs(sum(m.val)) AS val, m.usr_mov AS usr_mov, u.color AS usr_color, c.income AS income, m.cat_id AS cat_id, year(m.dat_mov) AS year from ((movement m join category c ON ((c.cat_id = m.cat_id))) join user u ON ((u.usr_id = m.usr_mov))) group by m.usr_mov , u.color , c.income , m.cat_id , year(m.dat_mov)
CREATE OR REPLACE VIEW tot AS select abs(sum(m.val)) AS val, m.type AS income, m.usr_mov AS usr_mov, m.cat_id AS cat_id, year(m.dat_mov) AS year from movement m group by m.type, m.usr_mov, m.cat_id, year(m.dat_mov)
insert into mversion (db) values ('1.5');